@import 'variables.scss';

@mixin page-padding() {
    padding: $zen-page-padding;

    @media only screen and (min-width: 2560px) {
        padding: $zen-page-padding-2k;
    }

    @media only screen and (min-width: 3840px) {
        padding: $zen-page-padding-4k;
    }

    @media only screen and (max-width: 768px) {
        padding: $zen-page-padding-mobile;
    }
}

@mixin hero-padding() {
    padding: $zen-hero-padding;

    @media only screen and (max-width: 768px) {
        padding: $zen-hero-padding-mobile;
    }
}

@mixin lounge-padding() {
    padding: $zen-lounge-page-padding;

    @media only screen and (max-width: 768px) {
        padding: $zen-page-padding-mobile;
    }
}

@mixin flex-row() {
    display: flex;
    flex-direction: row;
    align-items: center;
    white-space: nowrap;
    width: 100%;
}

@mixin flex-column() {
    display: flex;
    flex-direction: column;
    align-items: center;
    white-space: nowrap;
}

@mixin position($position, $top: undefined, $right: undefined, $bottom: undefined, $left: undefined) {
    position: $position;

    @if $top != undefined {
        top: $top;
    }
    @if $right != undefined {
        right: $right;
    }
    @if $bottom != undefined {
        bottom: $bottom;
    }
    @if $left != undefined {
        left: $left;
    }
}

@mixin position-xy($position, $x: undefined, $y: undefined) {
    position: $position;

    @if $x != undefined {
        right: $x;
        left: $x;
    }
    @if $y != undefined {
        top: $y;
        bottom: $y;
    }
}

@mixin object($fit: cover, $position: center) {
    object-fit: $fit;
    object-position: $position;
}


@mixin link($color) {
    color: $color;
    text-decoration: none;
}

@mixin active {
    &:not([disabled]),
    &:not([disabled]):active {
      @content;
    }
}

@mixin hover-focus {
    &:not([disabled]):hover,
    &:not([disabled]):focus {
      @content;
      outline: none !important;
    }
}

@mixin solid-button($background, $color, $hover-background, $hover-color) {
    @include active {
        background-color: $background;
        color: $color;
    }
    @include hover-focus {
        background-color: $hover-background;
        color: $hover-color;
    }
}

@mixin outline-button($color, $hover-color) {
    @include active {
        background-color: transparent;
        border: thin solid $color;
        color: $color;
    }
    @include hover-focus {
        border: thin solid $hover-color;
        color: $hover-color;
    }
}

@mixin outline-solid-button($color, $hover-background, $hover-color) {
    @include active {
        background-color: transparent;
        border: thin solid $color;
        color: $color;
    }
    @include hover-focus {
        background-color: $hover-background;
        border: thin solid $hover-background;
        color: $hover-color;
    }
}

@mixin solid-outline-button($background, $color, $hover-color) {
    @include active {
        background-color: $background;
        border: thin solid $background;
        color: $color;
    }
    @include hover-focus {
        background-color: transparent;
        border: thin solid $hover-color;
        color: $hover-color;
    }
}